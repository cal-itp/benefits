worker_processes auto;
error_log stderr warn;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
  accept_mutex on;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  gzip on;
  keepalive_timeout 5;

  log_format main '[$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /dev/stdout main;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    server unix:/home/calitp/app/run/gunicorn.sock fail_timeout=0;
  }

  server {
    listen 80;

    keepalive_timeout 65;

    # simple healthcheck endpoint returns 200
    location /healthy {
      access_log off;
      return 200;
    }

    location /favicon.ico {
      access_log off;
      log_not_found off;
    }

    # path for static files
    location /static/ {
      alias /home/calitp/app/static/;
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    # app path
    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
  }
}