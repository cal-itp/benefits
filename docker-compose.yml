version: "3.8"

services:
  client:
    build: .
    image: benefits_client:latest
    environment:
      - ANALYTICS_KEY
      - DJANGO_ADMIN
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_DB
      - DJANGO_DEBUG
      - DJANGO_INIT_PATH
      - DJANGO_LOG_LEVEL
      - DJANGO_SECRET_KEY
    ports:
      - "${DJANGO_LOCAL_PORT}:8000"
    volumes:
      - ./data:/home/calitp/app/data:cached
      - configvolume:/home/calitp/app/config:ro

  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: benefits_client:dev
    environment:
      - ANALYTICS_KEY
      - DJANGO_ADMIN
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_DB
      - DJANGO_DEBUG
      - DJANGO_INIT_PATH
      - DJANGO_LOG_LEVEL
      - DJANGO_SECRET_KEY
    entrypoint: []
    command: python -m debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000
    depends_on:
      - server
    ports:
      - "${DJANGO_LOCAL_PORT}:8000"
      - "5678:5678"
    volumes:
      - .:/home/calitp/app:cached

  server:
    build: ./server
    image: eligibility_verification_server:dev
    command: python -m debugpy --listen 0.0.0.0:5789 app.py
    environment:
      - FLASK_APP=app.py
      - FLASK_DEBUG=1
      - FLASK_ENV=development
    ports:
      - "5000:5000"
      - "5789:5789"
    volumes:
      - ./server:/usr/src/server:cached
      - ./data:/usr/src/server/data
      - ./keys:/usr/src/server/keys

  s3config:
    image: amazon/aws-cli
    entrypoint: ["/bin/sh"]
    command: ["-c", "aws s3 cp s3://${CONFIG_BUCKET_PATH} ."]
    environment:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_DEFAULT_REGION
    volumes:
      - configvolume:/aws

volumes:
  configvolume:
