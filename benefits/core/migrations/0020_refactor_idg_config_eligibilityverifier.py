# Generated by Django 5.0.6 on 2024-08-07 19:24

from django.db import migrations, models


def migrate_data(apps, schema_editor):
    EligibilityVerifier = apps.get_model("core", "EligibilityVerifier")

    for verifier in EligibilityVerifier.objects.all():
        # check if verifier has a claims_provider, only migrate data if it does
        if verifier.claims_provider is not None:
            verifier.claims_scope = verifier.claims_provider.scope
            verifier.claims_claim = verifier.claims_provider.claim
        verifier.save()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0019_refactor_transitagency"),
    ]

    operations = [
        migrations.AddField(
            model_name="eligibilityverifier",
            name="claims_claim",
            field=models.TextField(
                blank=True, help_text="The name of the claim (name/value pair) that is used to verify eligibility", null=True
            ),
        ),
        migrations.AddField(
            model_name="eligibilityverifier",
            name="claims_scope",
            field=models.TextField(
                blank=True,
                help_text="A space-separated list of identifiers used to specify what access privileges are being requested",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="eligibilityverifier",
            name="claims_scheme_override",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="The authentication scheme to use (Optional). If blank, defaults to the value in Claims providers",
                null=True,
                verbose_name="Claims scheme",
            ),
        ),
        migrations.RunPython(migrate_data),
        migrations.RemoveField(
            model_name="claimsprovider",
            name="claim",
        ),
        migrations.RemoveField(
            model_name="claimsprovider",
            name="scope",
        ),
    ]
