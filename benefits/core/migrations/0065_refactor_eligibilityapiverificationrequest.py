# Generated by Django 5.2.7 on 2025-10-08 17:40

import benefits.core.models.common
import benefits.secrets
import django.db.models.deletion
from django.db import migrations, models


def migrate_agency_data(apps, schema_editor):
    TransitAgency = apps.get_model("core", "TransitAgency")
    EligibilityApiConfig = apps.get_model("core", "EligibilityApiConfig")

    agencies = ["cst", "mst", "sbmtd"]

    for agency in TransitAgency.objects.all():
        if agency.slug in agencies:
            config = EligibilityApiConfig.objects.create(
                api_id=agency.eligibility_api_id,
                api_private_key=agency.eligibility_api_private_key,
                api_public_key=agency.eligibility_api_public_key,
            )
            config.save()

            agency.eligibility_api_config = config
            agency.save()


def migrate_flow_data(apps, schema_editor):
    EnrollmentFlow = apps.get_model("core", "EnrollmentFlow")
    EligibilityApiVerificationRequest = apps.get_model("core", "EligibilityApiVerificationRequest")

    api_systems = ["agency_card", "courtesy_card", "mobility_pass"]

    for flow in EnrollmentFlow.objects.all():
        if flow.system_name in api_systems:
            api_request = EligibilityApiVerificationRequest.objects.create(
                label=flow.system_name,
                api_url=flow.eligibility_api_url,
                api_auth_header=flow.eligibility_api_auth_header,
                api_auth_key_secret_name=flow.eligibility_api_auth_key_secret_name,
                api_jwe_cek_enc=flow.eligibility_api_jwe_cek_enc,
                api_jwe_encryption_alg=flow.eligibility_api_jwe_encryption_alg,
                api_jws_signing_alg=flow.eligibility_api_jws_signing_alg,
                api_public_key=flow.eligibility_api_public_key,
            )
            api_request.save()

            flow.api_request = api_request
            flow.save()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0064_transitagency_supported_card_schemes"),
    ]

    operations = [
        migrations.CreateModel(
            name="EligibilityApiVerificationRequest",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "label",
                    models.SlugField(help_text="A human readable label, used as the display text in Admin."),
                ),
                (
                    "api_url",
                    models.URLField(help_text="Fully qualified URL for an Eligibility API server."),
                ),
                (
                    "api_auth_header",
                    models.CharField(help_text="The auth header to send in Eligibility API requests.", max_length=50),
                ),
                (
                    "api_auth_key_secret_name",
                    benefits.core.models.common.SecretNameField(
                        help_text="The name of a secret containing the value of the auth header to send in Eligibility API requests.",  # noqa: E501
                        max_length=127,
                        validators=[benefits.secrets.SecretNameValidator()],
                    ),
                ),
                (
                    "api_jwe_cek_enc",
                    models.CharField(
                        help_text="The JWE-compatible Content Encryption Key (CEK) key-length and mode to use in Eligibility API requests.",  # noqa: E501
                        max_length=50,
                    ),
                ),
                (
                    "api_jwe_encryption_alg",
                    models.CharField(
                        help_text="The JWE-compatible encryption algorithm to use in Eligibility API requests.",
                        max_length=50,
                    ),
                ),
                (
                    "api_jws_signing_alg",
                    models.CharField(
                        help_text="The JWS-compatible signing algorithm to use in Eligibility API requests.",
                        max_length=50,
                    ),
                ),
                (
                    "api_public_key",
                    models.ForeignKey(
                        help_text="The public key used to encrypt Eligibility API requests and to verify signed Eligibility API responses.",  # noqa: E501
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="core.pemdata",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="enrollmentflow",
            name="api_request",
            field=models.ForeignKey(
                blank=True,
                help_text="The Eligibility API request details for this flow.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.eligibilityapiverificationrequest",
            ),
        ),
        migrations.RunPython(migrate_flow_data),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_auth_header",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_auth_key_secret_name",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_jwe_cek_enc",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_jwe_encryption_alg",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_jws_signing_alg",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_public_key",
        ),
        migrations.RemoveField(
            model_name="enrollmentflow",
            name="eligibility_api_url",
        ),
        migrations.CreateModel(
            name="EligibilityApiConfig",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("api_id", models.SlugField(help_text="The identifier for this agency used in Eligibility API calls.")),
                (
                    "api_private_key",
                    models.ForeignKey(
                        help_text="Private key used to sign Eligibility API tokens created on behalf of this Agency.",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="core.pemdata",
                    ),
                ),
                (
                    "api_public_key",
                    models.ForeignKey(
                        help_text="Public key corresponding to the agency's private key, used by Eligibility Verification servers to encrypt responses.",  # noqa: E501
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="core.pemdata",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="transitagency",
            name="eligibility_api_config",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="The Eligibility API configuration for this transit agency.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.eligibilityapiconfig",
            ),
        ),
        migrations.RunPython(migrate_agency_data),
        migrations.RemoveField(
            model_name="transitagency",
            name="eligibility_api_id",
        ),
        migrations.RemoveField(
            model_name="transitagency",
            name="eligibility_api_private_key",
        ),
        migrations.RemoveField(
            model_name="transitagency",
            name="eligibility_api_public_key",
        ),
    ]
