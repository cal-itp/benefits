# Generated by Django 5.0.7 on 2024-08-02 22:52

from django.contrib.auth.management import create_permissions
from django.db import migrations


def create_all_permissions(apps, schema_editor):
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None


def update_permissions(apps, schema_editor):
    # delete old permissions
    Permission = apps.get_model("auth", "Permission")
    old_permission_names = [
        "Can view auth provider",
        "Can change auth provider",
        "Can add auth provider",
        "Can delete auth provider",
    ]

    for name in old_permission_names:
        old_permission = Permission.objects.get(name=name)
        old_permission.delete()

    # add new permissions to staff group
    Group = apps.get_model("auth", "Group")
    staff_group = Group.objects.get(name="Cal-ITP")

    Permission = apps.get_model("auth", "Permission")
    new_permission_names = ["Can view claims provider", "Can change claims provider"]

    for name in new_permission_names:
        new_permission = Permission.objects.get(name=name)
        staff_group.permissions.add(new_permission)


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0016_refactor_paymentprocessor_transitprocessor"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="AuthProvider",
            new_name="ClaimsProvider",
        ),
        migrations.RunPython(create_all_permissions),  # this is needed to create the new permissions for the renamed model
        migrations.RunPython(update_permissions),
    ]
