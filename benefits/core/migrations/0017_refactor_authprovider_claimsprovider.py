# Generated by Django 5.0.7 on 2024-08-02 22:52

from django.db import migrations, models

from benefits.core.migrations import create_all_permissions
import benefits.core.models
import benefits.secrets


def update_permissions(apps, schema_editor):
    # delete old permissions
    Permission = apps.get_model("auth", "Permission")
    old_permission_names = [
        "Can view auth provider",
        "Can change auth provider",
        "Can add auth provider",
        "Can delete auth provider",
    ]

    for name in old_permission_names:
        old_permission = Permission.objects.get(name=name)
        old_permission.delete()

    # add new permissions to staff group
    Group = apps.get_model("auth", "Group")
    staff_group = Group.objects.get(name="Cal-ITP")

    Permission = apps.get_model("auth", "Permission")
    new_permission_names = ["Can view claims provider", "Can change claims provider"]

    for name in new_permission_names:
        new_permission = Permission.objects.get(name=name)
        staff_group.permissions.add(new_permission)


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0016_refactor_paymentprocessor_transitprocessor"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="AuthProvider",
            new_name="ClaimsProvider",
        ),
        migrations.RunPython(create_all_permissions),  # this is needed to create the new permissions for the renamed model
        migrations.RunPython(update_permissions),
        migrations.AlterField(
            model_name="claimsprovider",
            name="authority",
            field=models.TextField(help_text="The fully qualified HTTPS domain name for an OAuth authority server"),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="claim",
            field=models.TextField(
                blank=True, help_text="The name of the claim (name/value pair) that is used to verify eligibility", null=True
            ),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="client_id_secret_name",
            field=benefits.core.models.SecretNameField(
                help_text="The name of the secret containing the client ID for this claims provider",
                max_length=127,
                validators=[benefits.secrets.SecretNameValidator()],
            ),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="client_name",
            field=models.TextField(help_text="Unique identifier used to register this claims provider with Authlib registry"),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="scheme",
            field=models.TextField(help_text="The authentication scheme to use"),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="scope",
            field=models.TextField(
                blank=True,
                help_text="A space-separated list of identifiers used to specify what access privileges are being requested",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="sign_out_button_template",
            field=models.TextField(blank=True, help_text="Template that renders sign-out button", null=True),
        ),
        migrations.AlterField(
            model_name="claimsprovider",
            name="sign_out_link_template",
            field=models.TextField(blank=True, help_text="Template that renders sign-out link", null=True),
        ),
        migrations.RenameField(
            model_name="eligibilityverifier",
            old_name="auth_provider",
            new_name="claims_provider",
        ),
    ]
